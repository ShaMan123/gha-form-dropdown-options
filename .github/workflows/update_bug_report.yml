name: ðŸš€ Update Bug Report

on:
  # used for testing this action
  # you shouldn't use this trigger in production
  push:
    branches:
      - main

  # used for testing this action
  # you shouldn't use this trigger in production
  pull_request:
    branches: [main]

  # use in production
  workflow_dispatch:

  # use in production
  # needs ref setup
  release:
    branches:
      - main
    types: [published]

  # use in production
  schedule:
    # runs daily at midnight
    # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule
    - cron: '0 0 * * *'

jobs:
  pre:
    name: Prepare context for other jobs
    runs-on: ubuntu-latest
    outputs:
      # used for testing this action, needed in order to reference the local action
      branch: ${{ env.job_ref }}
      branches: ${{ steps.branches.outputs.result }}
      labels: ${{ steps.labels.outputs.result }}
      long: ${{ steps.long.outputs.result }}
      long2: ${{ steps.long2.outputs.result }}
      dates: ${{ steps.dates.outputs.result }}
    steps:
      # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-environment-variable
      - name: Setting branch for committing
        run: |
          if [ ${{ github.event_name }} = release ]
            then echo "job_ref=${{ github.event.repository.default_branch }}" >> $GITHUB_ENV
          else echo "job_ref=${{ github.ref }}" >> $GITHUB_ENV
          fi
      - name: Get branches
        id: branches
        # https://github.com/actions/github-script
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            return github
              .rest.repos.listBranches(context.repo)
              .then((res) => res.data.map((b) => b.name));
      - name: Get labels
        id: labels
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            return github
              .rest.issues.listLabelsForRepo(context.repo)
              .then((res) => res.data.map((l) => l.name));
      - name: Generate a long array
        id: long
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            return new Array(500).fill(0).map((_, i) => `#${i + 1}`);
      - name: Generate another long array
        id: long2
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            return new Array(500).fill(0).map((_, i) => `#${i + 1}`).reverse();
      - name: Get next week
        id: dates
        uses: actions/github-script@v6
        with:
          # unfortunately I didn't manage to import moment
          # https://github.com/actions/github-script/issues/275
          script: |
            function format(dayDiff) {
              const date = new Date(Date.now() + dayDiff * 24 * 60 * 60 * 1000);
              return `${date.getFullYear()}-${date.getMonth() + 1}-${
                date.getDate() < 10 ? `0${date.getDate()}` : date.getDate()
              }`;
            }
            return new Array(7).fill(0).map((_, i) => format(i + 7));
  update-bug-report:
    name: Update bug report on branch `${{ needs.pre.outputs.branch }}`
    runs-on: ubuntu-latest
    needs: pre
    steps:
      # https://github.com/actions/checkout#checkout-head
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
          ref: ${{ needs.pre.outputs.branch }}
      - run: git checkout HEAD^
      - name: Update branches locally
        uses: ./
        with:
          dropdown: branches
          options: ${{ needs.pre.outputs.branches }}
          dry_run: true
      - name: Update labels locally
        uses: ./
        with:
          dropdown: labels
          options: ${{ needs.pre.outputs.labels }}
          dry_run: true
      - name: Update dates and commit
        id: commit
        uses: ./
        with:
          dropdown: dates
          options: ${{ needs.pre.outputs.dates }}
          commit_message: 'chore(): update bug report'
      - run: echo ${{ steps.commit.output.pushed }}
  update-long-report:
    name: Update long report on branch `${{ needs.pre.outputs.branch }}`
    runs-on: ubuntu-latest
    needs: pre
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
          ref: ${{ needs.pre.outputs.branch }}
      - run: git checkout HEAD^
      - name: Update long dropdown
        uses: ./
        with:
          template: .github/template_report.yml
          form: .github/ISSUE_TEMPLATE/long_report.yml
          dropdown: long
          options: ${{ needs.pre.outputs.long }}
          commit_message: 'chore(): update long report / long dropdown'
      - name: Update long2 dropdown
        uses: ./
        with:
          template: .github/template_report.yml
          form: .github/ISSUE_TEMPLATE/long_report.yml
          dropdown: long2
          options: ${{ needs.pre.outputs.long2 }}
          commit_message: 'chore(): update long report / long2 dropdown'
