name: ðŸš€ Update Bug Report

on:
  # used for testing this action
  # you shouldn't use this trigger in production
  push:
    branches:
      - main

  # used for testing this action
  # you shouldn't use this trigger in production
  pull_request:
    branches: [main]

  # use in production
  workflow_dispatch:

  # use in production
  release:
    branches:
      - main
    types: [published]

  # use in production
  schedule:
    # runs daily at midnight
    # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule
    - cron: '0 0 * * *'

jobs:
  pre:
    name: Prepare context for other jobs
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.branch.outputs.result }}
      branches: ${{ steps.branches.outputs.result }}
      labels: ${{ steps.labels.outputs.result }}
    steps:
      # used for testing this action, needed in order to reference the local action
      - name: 'TEST: Get branch for job'
        id: branch
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            switch ('${{ github.event_name }}') {
              case 'pull_request':
                return '${{ github.head_ref }}';
              case 'release':
                return '${{ github.event.repository.default_branch }}';
              default:
                return '${{ github.ref }}';
            }
      - name: Get branches
        id: branches
        # https://github.com/actions/github-script
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            return github
              .rest.repos.listBranches(context.repo)
              .then((res) => res.data.map((b) => b.name));
      - name: Get labels
        id: labels
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            return github
              .rest.issues.listLabelsForRepo(context.repo)
              .then((res) => res.data.map((l) => l.name));
  update-bug-report-main:
    name: Update bug report on `main`
    runs-on: ubuntu-latest
    needs: pre
    steps:
      # used for testing this action, needed in order to reference the local action
      - name: 'TEST: Checkout ${{ needs.pre.outputs.branch }}'
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.pre.outputs.branch }}
      - name: Update branches
        uses: ./
        with:
          dropdown: branches
          options: ${{ needs.pre.outputs.branches }}
          commit_message: 'chore(): update bug report branches'
          # This option will checkout the local branch to `main`
          # Any consequent steps will run in the same context
          # That is why we isolate it in a separate job
          ref: main
  update-bug-report:
    name: Update bug report on branch `${{ needs.pre.outputs.branch }}`
    runs-on: ubuntu-latest
    needs: pre
    steps:
      # used for testing this action, needed in order to reference the local action
      - name: 'TEST: Checkout ${{ needs.pre.outputs.branch }}'
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.pre.outputs.branch }}
      - name: Update labels
        uses: ./
        with:
          dropdown: labels
          options: ${{ needs.pre.outputs.labels }}
          commit_message: 'chore(): update bug report labels'
      - name: Get next week
        id: dates
        uses: actions/github-script@v6
        with:
          # unfortunately I didn't manage to import moment
          # https://github.com/actions/github-script/issues/275
          script: |
            function format(dayDiff) {
              const date = new Date(Date.now() + dayDiff * 24 * 60 * 60 * 1000);
              return `${date.getFullYear()}-${date.getMonth() + 1}-${
                date.getDate() < 10 ? `0${date.getDate()}` : date.getDate()
              }`;
            }
            return new Array(7).fill(0).map((_, i) => format(i + 7));
      - name: Update dates
        id: update_dates
        uses: ./
        with:
          dropdown: dates
          options: ${{ steps.dates.outputs.result }}
          commit_message: 'chore(): update bug report dates'
